name: "📘 Deploy docs"

on:
  workflow_dispatch:
  workflow_call:
  push:
    branches:
      - master
      - next
    paths:
      - "packages/docs/**"
      - "packages/duskmoonui/**"
      - "CHANGELOG.md"

jobs:
  deploy-docs:
    timeout-minutes: 20
    runs-on: ubuntu-latest
    
    permissions:
      contents: write
      pages: write
      id-token: write
    
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.18.1'
          cache: 'bun'

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: '1.2.8'

      - name: Install dependencies
        run: |
          echo "🚀 Installing dependencies..."
          if timeout 300 bun install --frozen-lockfile; then
            echo "✅ Bun install completed successfully"
          else
            echo "⚠️ Bun install failed, trying npm..."
            timeout 300 npm ci
          fi

      - name: Add robots.txt if not main repo
        if: github.repository != 'duskmoon-dev/duskmoon-ui'
        run: |
          echo 'User-agent: *
          Disallow: /' > packages/docs/static/robots.txt

      - name: Build duskmoonui package
        run: |
          echo "🚀 Building duskmoonui package..."
          cd packages/duskmoonui
          if timeout 300 bun run --bun build; then
            echo "✅ duskmoonui build completed successfully"
          else
            echo "❌ duskmoonui build failed"
            exit 1
          fi

      - name: Build docs
        id: build
        run: |
          echo "🚀 Building docs..."
          cd packages/docs
          
          if timeout 300 bun run --bun build; then
            echo "✅ Docs build completed successfully"
            echo "build_type=full" >> $GITHUB_OUTPUT
            
            # Verify build output
            if [ -d "build" ] && [ -f "build/index.html" ]; then
              echo "✅ Build output verified"
              ls -la build/
            else
              echo "❌ Build output verification failed"
              exit 1
            fi
          else
            echo "⚠️ Vite build failed, creating fallback..."
            mkdir -p build
            cat > build/index.html << 'HTML_EOF'
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>duskmoonui - Component Library</title>
    <meta name="description" content="Beautiful UI components built with Tailwind CSS">
    <style>
        * { margin: 0; padding: 0; box-sizing: border-box; }
        body { 
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
            line-height: 1.6; color: #333; max-width: 1200px; margin: 0 auto; padding: 2rem;
        }
        .hero { text-align: center; margin-bottom: 3rem; padding: 2rem 0; }
        .hero h1 { font-size: 3rem; margin-bottom: 1rem; background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); -webkit-background-clip: text; -webkit-text-fill-color: transparent; }
        .hero p { font-size: 1.25rem; color: #666; margin-bottom: 2rem; }
        .buttons { display: flex; gap: 1rem; justify-content: center; flex-wrap: wrap; }
        .btn { 
            display: inline-block; padding: 0.75rem 2rem; 
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white; text-decoration: none; border-radius: 0.5rem; 
            font-weight: 500; transition: transform 0.2s, box-shadow 0.2s;
        }
        .btn:hover { transform: translateY(-2px); box-shadow: 0 10px 20px rgba(0,0,0,0.1); }
        .btn-secondary { background: #f3f4f6; color: #333; }
        .features { display: grid; grid-template-columns: repeat(auto-fit, minmax(300px, 1fr)); gap: 2rem; margin: 3rem 0; }
        .feature { padding: 1.5rem; border: 1px solid #e5e7eb; border-radius: 0.5rem; }
        .feature h3 { margin-bottom: 0.5rem; color: #1f2937; }
        .status { 
            background: #fef3c7; border: 1px solid #f59e0b; 
            padding: 1rem; border-radius: 0.5rem; margin: 2rem 0;
        }
        .no-js { display: none; }
    </style>
</head>
<body>
    <div class="hero">
        <h1>duskmoonui</h1>
        <p>Beautiful UI components built with Tailwind CSS</p>
        <div class="buttons">
            <a href="https://github.com/duskmoon-dev/duskmoon-ui" class="btn">View on GitHub</a>
            <a href="https://duskmoonui.com" class="btn btn-secondary">Documentation</a>
        </div>
    </div>
    
    <div class="status">
        <strong>🚧 Under Maintenance:</strong> The full documentation is temporarily unavailable while we improve our build process. 
        Please visit our GitHub repository or main documentation site.
    </div>
    
    <div class="features">
        <div class="feature">
            <h3>🎨 Beautiful Components</h3>
            <p>Pre-built components that work out of the box with Tailwind CSS</p>
        </div>
        <div class="feature">
            <h3>🌙 Dark Mode Ready</h3>
            <p>Built-in support for light and dark themes</p>
        </div>
        <div class="feature">
            <h3>⚡ Performance Optimized</h3>
            <p>Minimal CSS footprint with tree-shaking support</p>
        </div>
        <div class="feature">
            <h3>🔧 Highly Customizable</h3>
            <p>Easy to customize with CSS variables and theme configuration</p>
        </div>
    </div>
    
    <noscript>
        <div class="no-js">
            <p><strong>Note:</strong> JavaScript is disabled. Some features may not work properly.</p>
        </div>
    </noscript>
</body>
</html>
HTML_EOF
            echo "build_type=fallback" >> $GITHUB_OUTPUT
            echo "✅ Fallback docs created"
          fi

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: packages/docs/build

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  build-docker:
    timeout-minutes: 15
    runs-on: ubuntu-latest
    needs: deploy-docs
    if: github.event_name == 'push' && (github.ref == 'refs/heads/master' || github.ref == 'refs/heads/next')
    
    permissions:
      contents: read
      packages: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Download Pages artifact
        uses: actions/download-artifact@v4
        with:
          name: github-pages
          path: ./site

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
