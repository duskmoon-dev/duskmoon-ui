name: "📘 Deploy docs"

on:
  workflow_dispatch:
  workflow_call:
  push:
    branches:
      - master
      - next
    paths:
      - "packages/docs/**"
      - "packages/duskmoonui/**"
      - "CHANGELOG.md"

jobs:
  deploy-docs:
    timeout-minutes: 20
    runs-on: ubuntu-latest
    
    permissions:
      contents: write
      pages: write
      id-token: write
    
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.18.1'

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: '1.2.8'

      - name: Install dependencies
        run: |
          echo "🚀 Installing dependencies..."
          if timeout 300 bun install --frozen-lockfile; then
            echo "✅ Bun install completed successfully"
          else
            echo "⚠️ Bun install failed, trying npm..."
            timeout 300 npm ci
          fi

      - name: Add robots.txt if not main repo
        if: github.repository != 'duskmoon-dev/duskmoon-ui'
        run: |
          echo 'User-agent: *
          Disallow: /' > packages/docs/static/robots.txt

      - name: Build duskmoonui package
        run: |
          echo "🚀 Building duskmoonui package..."
          cd packages/duskmoonui
          if timeout 300 bun run --bun build; then
            echo "✅ duskmoonui build completed successfully"
          else
            echo "❌ duskmoonui build failed"
            exit 1
          fi

      - name: Build docs
        id: build
        run: |
          echo "🚀 Building docs..."
          cd packages/docs
          
          # Override environment variables for CI build
          echo "PUBLIC_DUSKMOONUI_API_PATH=" > .env.ci
          echo "CI=true" >> .env.ci
          
          # Use the CI-specific env file
          mv .env .env.backup
          mv .env.ci .env
          
          if timeout 300 bun run --bun build; then
            echo "✅ Docs build completed successfully"
            echo "build_type=full" >> $GITHUB_OUTPUT
            
            # Verify build output
            if [ -d "build" ] && [ -f "build/index.html" ]; then
              echo "✅ Build output verified"
              ls -la build/
            else
              echo "❌ Build output verification failed"
              exit 1
            fi
          else
            echo "❌ Vite build failed"
            # Restore original env file for debugging
            mv .env.backup .env 2>/dev/null || true
            exit 1
          fi
          
          # Restore original env file
          mv .env.backup .env 2>/dev/null || true

      - name: Setup Pages
        uses: actions/configure-pages@v4
        continue-on-error: true

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: packages/docs/build

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        continue-on-error: true

  build-docker:
    timeout-minutes: 15
    runs-on: ubuntu-latest
    needs: deploy-docs
    if: github.event_name == 'push' && (github.ref == 'refs/heads/master' || github.ref == 'refs/heads/next')
    
    permissions:
      contents: read
      packages: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Download Pages artifact
        uses: actions/download-artifact@v4
        with:
          name: github-pages
          path: ./site

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
