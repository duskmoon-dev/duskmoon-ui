name: "üìò Deploy docs"

on:
  workflow_dispatch:
    inputs:
      deploy_to_production:
        description: 'Deploy to GitHub Pages (manual deployment)'
        required: false
        type: boolean
        default: false
  # Automatic deployment every 6 hours
  schedule:
    - cron: '0 */6 * * *'

jobs:
  # Build job that outputs build artifacts
  build:
    timeout-minutes: 15
    runs-on: ubuntu-latest
    outputs:
      build-path: ${{ steps.build.outputs.build-path }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: '1.2.8'

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.bun/install/cache
            node_modules/.cache
          key: ${{ runner.os }}-bun-${{ hashFiles('**/bun.lockb') }}
          restore-keys: |
            ${{ runner.os }}-bun-

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Build duskmoonui package
        run: |
          echo "üöÄ Building duskmoonui package..."
          cd packages/duskmoonui
          bun run prebuild
          bun run build
          echo "‚úÖ duskmoonui build completed"

      - name: Verify theme files exist
        run: |
          echo "üîç Verifying theme files..."
          ls -la packages/duskmoonui/theme/
          if [ -f "packages/duskmoonui/theme/variables.js" ]; then
            echo "‚úÖ variables.js exists"
            head -5 packages/duskmoonui/theme/variables.js
          else
            echo "‚ùå variables.js not found"
            exit 1
          fi

      - name: Build docs
        id: build
        run: |
          echo "üöÄ Building docs..."
          cd packages/docs

          # Set environment for GitHub Pages
          echo "NODE_ENV=production" > .env.production
          echo "CI=true" >> .env.production

          # Build with production optimizations
          bun run build

          echo "build-path=packages/docs/build" >> $GITHUB_OUTPUT

      - name: Build verification
        run: |
          echo "üîç Verifying build output..."
          cd packages/docs
          if [ -d "build" ] && [ -f "build/index.html" ]; then
            echo "‚úÖ Build verification successful"
            ls -la build/
            du -sh build/ | head -5
          else
            echo "‚ùå Build verification failed"
            exit 1
          fi

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-files
          path: packages/docs/build
          retention-days: 1

  # Deploy job (only runs on manual deployment)
  deploy:
    if: |
      github.event_name != 'pull_request' && (
        github.event.inputs.deploy_to_production == 'true'
      )
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-files
          path: build

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload to GitHub Pages
        uses: actions/upload-pages-artifact@v3
        with:
          path: build

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4